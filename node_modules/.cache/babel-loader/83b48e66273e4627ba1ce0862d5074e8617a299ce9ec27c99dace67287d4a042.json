{"ast":null,"code":"var _jsxFileName = \"/Volumes/Tyler HDD/Projects/Jamming/jamming-app/src/App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\n//import './App.css';\nimport { useState } from 'react';\nimport React from 'react';\nimport SearchBar from './components/SearchBar';\nimport SearchResults from './components/SearchResults';\nimport Playlist from './components/Playlist';\nimport Spotify from './components/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const addTrack = track => {\n    if (!playlistTracks.some(existingTrack => existingTrack.id === track.id)) {\n      setPlaylistTracks([...playlistTracks, track]);\n    }\n  };\n  const removeTrack = track => {\n    setPlaylistTracks(playlistTracks.filter(existingTrack => existingTrack.id != track.id));\n  };\n  const updatePlaylistName = newName => {\n    setPlaylistName(newName);\n  };\n  const savePlaylist = () => {\n    const trackURIs = playlistTracks.map(track => track.uri);\n    if (!playlistName || !trackURIs.length) {\n      return;\n    }\n    Spotify.getUserId().then(userId => Spotify.createPlaylist(userId, playlistName)).then(playlistId => Spotify.addTracksToPlaylist(playlistId, trackURIs)).then(() => {\n      alert('Playlist saved!');\n      setPlaylistName('My Playlist');\n      setPlaylistTracks([]);\n    });\n  };\n  const searchSpotify = term => {\n    Spotify.search(term).then(searchResults => {\n      setSearchResults(searchResults);\n    });\n  };\n  const appStyle = {\n    fontFamily: 'Arial, sans-serif',\n    backgroundColor: '#f4f4f4',\n    padding: '20px',\n    textAlign: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: appStyle,\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: searchSpotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-playlist\",\n      children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n        searchResults: searchResults,\n        onAdd: addTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        playlistName: playlistName,\n        tracks: playlistTracks,\n        onRemove: removeTrack,\n        onNameChange: updatePlaylistName,\n        onSave: savePlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VSE5c8DR2z/lJuNvXuScCakabes=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","React","SearchBar","SearchResults","Playlist","Spotify","jsxDEV","_jsxDEV","App","_s","playlistName","setPlaylistName","searchResults","setSearchResults","playlistTracks","setPlaylistTracks","addTrack","track","some","existingTrack","id","removeTrack","filter","updatePlaylistName","newName","savePlaylist","trackURIs","map","uri","length","getUserId","then","userId","createPlaylist","playlistId","addTracksToPlaylist","alert","searchSpotify","term","search","appStyle","fontFamily","backgroundColor","padding","textAlign","className","style","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","tracks","onRemove","onNameChange","onSave","_c","$RefreshReg$"],"sources":["/Volumes/Tyler HDD/Projects/Jamming/jamming-app/src/App.js"],"sourcesContent":["\n//import logo from './logo.svg';\n//import './App.css';\nimport { useState } from 'react';\nimport React from 'react';\nimport SearchBar from './components/SearchBar';\nimport SearchResults from './components/SearchResults';\nimport Playlist from './components/Playlist';\nimport Spotify from './components/Spotify';\n\n\nfunction App() {\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  const addTrack = (track) => {\n    if (!playlistTracks.some(existingTrack => existingTrack.id === track.id)){\n      setPlaylistTracks([...playlistTracks, track]);\n    }\n  };\n\n  const removeTrack = (track) => {\n    setPlaylistTracks(playlistTracks.filter(existingTrack => existingTrack.id != track.id));\n  };\n\n  const updatePlaylistName = (newName)=>{\n    setPlaylistName(newName);\n  };\n\n  const savePlaylist = () =>{\n    const trackURIs = playlistTracks.map(track => track.uri);\n    if (!playlistName || !trackURIs.length) {\n        return;\n    }\n\n    Spotify.getUserId()\n    .then(userId => Spotify.createPlaylist(userId, playlistName))\n    .then(playlistId => Spotify.addTracksToPlaylist(playlistId, trackURIs))\n    .then(() => {\n        alert('Playlist saved!');\n        setPlaylistName('My Playlist');\n        setPlaylistTracks([]);\n    });\n  };\n\n  const searchSpotify = (term) => {\n    Spotify.search(term).then(searchResults => {\n      setSearchResults(searchResults);\n    });\n  };\n\n  const appStyle = {\n    fontFamily: 'Arial, sans-serif',\n    backgroundColor: '#f4f4f4',\n    padding: '20px',\n    textAlign: 'center'\n};\n\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <SearchBar onSearch={searchSpotify}></SearchBar>\n      <div className='App-playlist'>\n        <SearchResults searchResults={searchResults} onAdd={addTrack}></SearchResults>\n        <Playlist playlistName ={playlistName} tracks ={playlistTracks} onRemove={removeTrack} onNameChange ={updatePlaylistName} onSave = {savePlaylist}></Playlist>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}