{"ast":null,"code":"import _toConsumableArray from\"/Volumes/Tyler HDD/Projects/Jamming/jamming-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Volumes/Tyler HDD/Projects/Jamming/jamming-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// Created by: Tyler Te\n//import logo from './logo.svg';\n//import './App.css';\nimport{useState}from'react';import React from'react';import SearchBar from'./components/SearchBar';import SearchResults from'./components/SearchResults';import Playlist from'./components/Playlist';import Spotify from'./components/Spotify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState('My Playlist'),_useState2=_slicedToArray(_useState,2),playlistName=_useState2[0],setPlaylistName=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),searchResults=_useState4[0],setSearchResults=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),playlistTracks=_useState6[0],setPlaylistTracks=_useState6[1];var addTrack=function addTrack(track){if(!playlistTracks.some(function(existingTrack){return existingTrack.id===track.id;})){setPlaylistTracks([].concat(_toConsumableArray(playlistTracks),[track]));}};var removeTrack=function removeTrack(track){setPlaylistTracks(playlistTracks.filter(function(existingTrack){return existingTrack.id!=track.id;}));};var updatePlaylistName=function updatePlaylistName(newName){setPlaylistName(newName);};var savePlaylist=function savePlaylist(){var trackURIs=playlistTracks.map(function(track){return track.uri;});if(!playlistName||!trackURIs.length){return;}Spotify.getUserId().then(function(userId){return Spotify.createPlaylist(userId,playlistName);}).then(function(playlistId){return Spotify.addTracksToPlaylist(playlistId,trackURIs);}).then(function(){alert('Playlist saved!');setPlaylistName('My Playlist');setPlaylistTracks([]);});};var searchSpotify=function searchSpotify(term){Spotify.search(term).then(function(searchResults){setSearchResults(searchResults);});};var appStyle={fontFamily:'Arial, sans-serif',backgroundColor:'#f4f4f4',padding:'20px',textAlign:'center'};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",style:appStyle,children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:searchSpotify}),/*#__PURE__*/_jsxs(\"div\",{className:\"App-playlist\",children:[/*#__PURE__*/_jsx(SearchResults,{searchResults:searchResults,onAdd:addTrack}),/*#__PURE__*/_jsx(Playlist,{playlistName:playlistName,tracks:playlistTracks,onRemove:removeTrack,onNameChange:updatePlaylistName,onSave:savePlaylist})]})]});}export default App;","map":{"version":3,"names":["useState","React","SearchBar","SearchResults","Playlist","Spotify","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","playlistName","setPlaylistName","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","playlistTracks","setPlaylistTracks","addTrack","track","some","existingTrack","id","concat","_toConsumableArray","removeTrack","filter","updatePlaylistName","newName","savePlaylist","trackURIs","map","uri","length","getUserId","then","userId","createPlaylist","playlistId","addTracksToPlaylist","alert","searchSpotify","term","search","appStyle","fontFamily","backgroundColor","padding","textAlign","className","style","children","onSearch","onAdd","tracks","onRemove","onNameChange","onSave"],"sources":["/Volumes/Tyler HDD/Projects/Jamming/jamming-app/src/App.js"],"sourcesContent":["// Created by: Tyler Te\n//import logo from './logo.svg';\n//import './App.css';\nimport { useState } from 'react';\nimport React from 'react';\nimport SearchBar from './components/SearchBar';\nimport SearchResults from './components/SearchResults';\nimport Playlist from './components/Playlist';\nimport Spotify from './components/Spotify';\n\n\nfunction App() {\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  const addTrack = (track) => {\n    if (!playlistTracks.some(existingTrack => existingTrack.id === track.id)){\n      setPlaylistTracks([...playlistTracks, track]);\n    }\n  };\n\n  const removeTrack = (track) => {\n    setPlaylistTracks(playlistTracks.filter(existingTrack => existingTrack.id != track.id));\n  };\n\n  const updatePlaylistName = (newName)=>{\n    setPlaylistName(newName);\n  };\n\n  const savePlaylist = () =>{\n    const trackURIs = playlistTracks.map(track => track.uri);\n    if (!playlistName || !trackURIs.length) {\n        return;\n    }\n\n    Spotify.getUserId()\n    .then(userId => Spotify.createPlaylist(userId, playlistName))\n    .then(playlistId => Spotify.addTracksToPlaylist(playlistId, trackURIs))\n    .then(() => {\n        alert('Playlist saved!');\n        setPlaylistName('My Playlist');\n        setPlaylistTracks([]);\n    });\n  };\n\n  const searchSpotify = (term) => {\n    Spotify.search(term).then(searchResults => {\n      setSearchResults(searchResults);\n    });\n  };\n\n  const appStyle = {\n    fontFamily: 'Arial, sans-serif',\n    backgroundColor: '#f4f4f4',\n    padding: '20px',\n    textAlign: 'center'\n};\n\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <SearchBar onSearch={searchSpotify}></SearchBar>\n      <div className='App-playlist'>\n        <SearchResults searchResults={searchResults} onAdd={addTrack}></SearchResults>\n        <Playlist playlistName ={playlistName} tracks ={playlistTracks} onRemove={removeTrack} onNameChange ={updatePlaylistName} onSave = {savePlaylist}></Playlist>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}