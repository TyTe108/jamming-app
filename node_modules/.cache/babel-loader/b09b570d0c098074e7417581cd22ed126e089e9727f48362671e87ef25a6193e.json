{"ast":null,"code":"var _jsxFileName = \"/Volumes/Tyler HDD/Projects/Jamming/jamming-app/src/App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\n//import './App.css';\nimport { useState } from 'react';\nimport React from 'react';\nimport SearchBar from './components/SearchBar';\nimport SearchResults from './components/SearchResults';\nimport Playlist from './components/Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n  const [searchResults, setSearchResults] = useState([{\n    id: 1,\n    name: 'Track 1',\n    artist: 'Artist 1',\n    album: 'Album 1'\n  }, {\n    id: 2,\n    name: 'Track 2',\n    artist: 'Artist 2',\n    album: 'Album 2'\n  }]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const addTrack = track => {\n    if (!playlistTracks.some(existingTrack => existingTrack.id === track.id)) {\n      setPlaylistTracks([...playlistTracks, track]);\n    }\n  };\n  const removeTrack = track => {\n    setPlaylistTracks(playlistTracks.filter());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-playlist\",\n      children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n        searchResults: searchResults,\n        onAdd: addTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        playlistName: playlistName,\n        tracks: playlistTracks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pMK4kOfxn8HzxYALQn5sn6sgljI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","React","SearchBar","SearchResults","Playlist","jsxDEV","_jsxDEV","App","_s","playlistName","setPlaylistName","searchResults","setSearchResults","id","name","artist","album","playlistTracks","setPlaylistTracks","addTrack","track","some","existingTrack","removeTrack","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","tracks","_c","$RefreshReg$"],"sources":["/Volumes/Tyler HDD/Projects/Jamming/jamming-app/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\n//import './App.css';\nimport { useState } from 'react';\nimport React from 'react';\nimport SearchBar from './components/SearchBar';\nimport SearchResults from './components/SearchResults';\nimport Playlist from './components/Playlist';\n\n\nfunction App() {\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n  const [searchResults, setSearchResults] = useState([\n    {id: 1, name:'Track 1', artist:'Artist 1', album:'Album 1'},\n    {id: 2, name:'Track 2', artist:'Artist 2', album:'Album 2'},\n  ]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  const addTrack = (track) => {\n    if (!playlistTracks.some(existingTrack => existingTrack.id === track.id)){\n      setPlaylistTracks([...playlistTracks, track]);\n    }\n  };\n\n  const removeTrack = (track) => {\n    setPlaylistTracks(playlistTracks.filter())\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchBar></SearchBar>\n      <div className='App-playlist'>\n        <SearchResults searchResults={searchResults} onAdd={addTrack}></SearchResults>\n        <Playlist playlistName ={playlistName} tracks ={playlistTracks}></Playlist>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,aAAa,CAAC;EAC/D,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,CACjD;IAACa,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAC,SAAS;IAAEC,MAAM,EAAC,UAAU;IAAEC,KAAK,EAAC;EAAS,CAAC,EAC3D;IAACH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAC,SAAS;IAAEC,MAAM,EAAC,UAAU;IAAEC,KAAK,EAAC;EAAS,CAAC,CAC5D,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMmB,QAAQ,GAAIC,KAAK,IAAK;IAC1B,IAAI,CAACH,cAAc,CAACI,IAAI,CAACC,aAAa,IAAIA,aAAa,CAACT,EAAE,KAAKO,KAAK,CAACP,EAAE,CAAC,EAAC;MACvEK,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEG,KAAK,CAAC,CAAC;IAC/C;EACF,CAAC;EAED,MAAMG,WAAW,GAAIH,KAAK,IAAK;IAC7BF,iBAAiB,CAACD,cAAc,CAACO,MAAM,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA,CAACJ,SAAS;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACvBxB,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BpB,OAAA,CAACH,aAAa;QAACQ,aAAa,EAAEA,aAAc;QAACoB,KAAK,EAAEZ;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC,eAC9ExB,OAAA,CAACF,QAAQ;QAACK,YAAY,EAAGA,YAAa;QAACuB,MAAM,EAAGf;MAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CA3BQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}